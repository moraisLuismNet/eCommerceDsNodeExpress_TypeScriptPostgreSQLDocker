version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production  # Use production stage
    container_name: ecommerce-app-prod
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=eCommerceDs
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - JWT_SECRET=your_jwt_secret_key_here
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "node", "dist/healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: bitnami/postgresql:15
    container_name: ecommerce-db-prod
    restart: unless-stopped
    environment:
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DATABASE=eCommerceDs
    volumes:
      - postgres_data_prod:/bitnami/postgresql
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d eCommerceDs"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  ecommerce-network:
    driver: bridge

volumes:
  postgres_data_prod:
    driver: local
